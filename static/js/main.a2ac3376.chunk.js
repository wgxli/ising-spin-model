(this["webpackJsonpising-spin"]=this["webpackJsonpising-spin"]||[]).push([[0],[,,,,,,,,,,,,,,function(e,n,t){e.exports=t(30)},,,,,function(e,n,t){},function(e,n,t){},function(e,n,t){},,,,,function(e,n,t){},function(e,n,t){},function(e,n,t){},function(e,n,t){},function(e,n,t){"use strict";t.r(n);var a=t(1),r=t.n(a),i=t(6),o=t.n(i),l=(t(19),t(3));t(20);var c=function(e){var n=e.width,t=e.height;return r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:"loading"},"Loading..."),r.a.createElement("canvas",{id:"canvas",width:n,height:t}))},u=t(11),s=t(4),m=t(10),d=t(7),f=t(41);t(21);var v=function(e){var n=e.id,t=e.name,a=e.unit,i=e.icon,o=e.value,l=e.min,c=e.max,u=e.decimals,s=e.marks,m=e.onChange;return r.a.createElement("div",{className:"slider "+n},r.a.createElement("p",{className:"name"},t),r.a.createElement("p",{className:"value"},o.toFixed(u)," ",a,r.a.createElement("span",{className:"icon"},i)),r.a.createElement(f.a,{value:o,min:l,max:c,step:Math.pow(10,-u),marks:s,onChange:function(e,n){return m(n)}}))},E=(t(26),2/Math.log(1+Math.sqrt(2)));function p(e){var n=e.name,t=e.value;return r.a.createElement("div",{className:"entry"},r.a.createElement("p",{className:"name"},n),r.a.createElement("p",{className:"value"},t,r.a.createElement("span",{className:"percent"},"%")))}function g(e){var n=e.coupling;return E*n/.004}var _=function(e){var n=e.state,t=e.responseFunctions,a=e.simWidth,i=e.simHeight,o=n.coupling,l=n.temperature,c=t.magnetization,u=o/(.004*l),s=l<g(n),m=s?Math.pow(1-Math.pow(Math.sinh(2*u),-4),1/8):0,d=s?"\xb1 ":"",f=Math.abs(c).toFixed(1),v=c<0?"\u2212":"+",E="".concat(Math.round(a)," \xd7 ").concat(Math.round(i));return r.a.createElement("div",{className:"info-bar"},r.a.createElement(p,{name:"Magnetization",value:"".concat(v," ").concat(f)}),r.a.createElement(p,{name:"Spontaneous Magnetization",value:d+(100*m).toFixed(1)}),r.a.createElement("div",{className:"entry"},r.a.createElement("p",{className:"caption"},"Simulation Size: ".concat(E))),r.a.createElement("div",{className:"entry"},r.a.createElement("p",{className:"caption"},"Made with <3 by Samuel J. Li")))},h=(t(27),{temperature:{name:"Temperature",min:-50,max:100,decimals:1,unit:"\xb0C",icon:r.a.createElement(s.c,null)},coupling:{name:"Coupling Constant",min:.45,max:.55,decimals:3,icon:r.a.createElement(m.a,null)},field:{name:"External Field Strength",min:-.1,max:.1,decimals:3,unit:"T",icon:r.a.createElement(d.a,null)}});var T=["temperature","coupling","field"];var b=function(e){var n=e.state,t=e.setState;return function(e){var n=e.temperature,t=g(e),a=n<t;h.temperature.marks=[{value:t-273.15,label:r.a.createElement("span",{className:"mark"},r.a.createElement("span",{className:"aux-label",style:{color:a?"hsl(220, 80%, 35%)":"hsl(220, 10%, 70%)"}},"Ferromagnet"),r.a.createElement("span",{style:{color:"hsl(200, 10%, 20%)"}},"T",r.a.createElement("sub",null,"c")),r.a.createElement("span",{className:"aux-label",style:{color:a?"hsl(220, 10%, 70%)":"hsl(220, 80%, 35%)"}},"Paramagnet"))}]}(n),r.a.createElement("div",{id:"controls"},T.map((function(e){var a=n[e],i="temperature"===e,o=i?273.15:0;return r.a.createElement(v,Object.assign({key:e,id:e,value:a-o,onChange:function(a){var l=Object(u.a)({},n);i&&function(e){var n=r.a.createElement(s.a,null);e>-60&&(n=r.a.createElement(s.d,null)),e>-20&&(n=r.a.createElement(s.c,null)),e>20&&(n=r.a.createElement(s.e,null)),e>60&&(n=r.a.createElement(s.b,null)),h.temperature.icon=n}(a),l[e]=a+o,t(l)}},h[e]))})))};t(28);var x=function(){var e=Object(a.useState)(!0),n=Object(l.a)(e,2),t=n[0],i=n[1];return r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:"help-container "+(t?"open":"closed"),onClick:function(){return i(!1)}},r.a.createElement("div",{className:"help-text",onClick:function(e){return e.stopPropagation()}},r.a.createElement("div",{className:"header"},r.a.createElement("span",{className:"icon"},r.a.createElement(d.a,null)),r.a.createElement("div",{className:"title"},"Ising Spin Model",r.a.createElement("p",{className:"subtitle"},"Made with ","<3"," by Samuel J. Li"))),"The ",r.a.createElement("b",null,"Ising spin model")," is a simplified model of ferromagnetic material (e.g. iron) at the microscopic level. Each pixel represents an electron, and its color represents the direction of its spin.",r.a.createElement("p",null,"Each electron is influenced by two opposing forces:"),r.a.createElement("ul",null,r.a.createElement("li",null,r.a.createElement("b",null,"Magnetism"),", which tends to align the spin of each electron with its neighbors and the external magnetic field, and"),r.a.createElement("li",null,r.a.createElement("b",null,"Heat"),", which causes random flucuations in orientation.")),"Despite its simplicity, the model exhibits complex behavior, including spontaneous magnetization, magnetic domains, and a Curie temperature.",r.a.createElement("button",{onClick:function(){return i(!1)}},"Got it!"))))},w=null,R=null,A=null,y=null,F=null,N=null,S=null,U=null,C={coupling:.5,field:0,temperature:283.65,iteration:0,pass:0,random_seed:0},M={};function D(e,n){var t=w.createShader(e);if(w.shaderSource(t,n),w.compileShader(t),w.getShaderParameter(t,w.COMPILE_STATUS))return t;console.error(w.getShaderInfoLog(t)),w.deleteShader(t)}function O(){var e=w.createTexture();return w.bindTexture(w.TEXTURE_2D,e),w.texParameteri(w.TEXTURE_2D,w.TEXTURE_WRAP_S,w.CLAMP_TO_EDGE),w.texParameteri(w.TEXTURE_2D,w.TEXTURE_WRAP_T,w.CLAMP_TO_EDGE),w.texParameteri(w.TEXTURE_2D,w.TEXTURE_MIN_FILTER,w.NEAREST),w.texParameteri(w.TEXTURE_2D,w.TEXTURE_MAG_FILTER,w.NEAREST),L(),e}function L(){for(var e=[],n=[w.canvas.width,w.canvas.height],t=n[0],a=n[1],r=0;r<t*a*4;r++)e.push(Math.random()<.5?0:255);w.texImage2D(w.TEXTURE_2D,0,w.RGBA,t,a,0,w.RGBA,w.UNSIGNED_BYTE,new Uint8Array(e)),w.uniform2f(M.resolution,t,a)}function P(e,n){C[e]=n,w.uniform1f(M[e],n)}function j(){if(null===w){var e=document.getElementById("canvas");w=e.getContext("webgl"),function(){var e=D(w.VERTEX_SHADER,"\nattribute vec2 a_position;\n\nvarying vec2 v_texCoord;\n\nvoid main() {\n    v_texCoord = (a_position + 1.0) / 2.0;\n    gl_Position = vec4(a_position, 0, 1);\n}\n"),n=D(w.FRAGMENT_SHADER,"\nprecision highp float;\n\nuniform sampler2D u_spin;\nuniform vec2 u_resolution;\n\nuniform float u_coupling;\nuniform float u_field;\nuniform float u_temperature;\n\nuniform float u_pass;\nuniform float u_iteration;\nuniform float u_random_seed;\n\nvarying vec2 v_texCoord;\n\nconst float C_BOLTZMANN = 4e-3;\n\nvec4 get_pixel(float dx, float dy) {\n    return 2.0 * texture2D(\n        u_spin,\n        fract(v_texCoord + vec2(dx, dy) / u_resolution)\n    ) - 1.0;\n}\n\nfloat rand(vec2 co) {\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat decode(vec4 v) {\n    v *= 255.0;\n    return (v.x + (v.y + (v.z + v.w/256.0)/256.0)/256.0)/256.0;\n}\n\nvec4 encode(float value) {\n    vec4 encoded = vec4(0.0, 0.0, 0.0, 0.0);\n    for (int i = 0; i < 4; i++) {\n        value *= 255.999;\n        float pixel = floor(value);\n        value -= pixel;\n        encoded[i] = pixel/255.0;\n    }\n    // To account for rounding bias\n    encoded[3] += value/255.0;\n    return encoded;\n}\n\nvoid main() {\n    vec4 current = get_pixel(0.0, 0.0);\n    vec4 new = (current + 1.0)/2.0;\n\n    // We cram a 2x2 block of binary spin states into each pixel:\n    // R G\n    // B A\n    vec4 top = get_pixel(0.0, 1.0);\n    vec4 bottom = get_pixel(0.0, -1.0);\n    vec4 left = get_pixel(-1.0, 0.0);\n    vec4 right = get_pixel(1.0, 0.0);\n\n    // Sum of four adjacent spin vectors for each 'subpixel'\n    vec4 adjacent_sum = vec4(\n        current.y + current.z + top.z + left.y,\n        current.x + current.w + top.w + right.x,\n        current.x + current.w + left.w + bottom.x,\n        current.y + current.z + right.z + bottom.y\n    );\n\n    // Render Passes\n    // 0: Compute simulated spins for next frame\n    // 1: Display average spin per cell (render to screen)\n    // 2: Display average spin per cell (render to texture)\n    // 3: Compute partial average (convolve with kernel)\n    if (u_pass < 0.5) {\n        // Compute new spins on pass 0, otherwise just display existing spins.\n        vec4 delta_h = 2.0 * current * (u_coupling * adjacent_sum + u_field);\n        float beta = 1.0 / (u_temperature * C_BOLTZMANN);\n        vec4 flip_probability = exp(-max(delta_h, 0.0) * beta);\n\n\n        vec2 noise = vec2(\n            rand(v_texCoord + u_random_seed * vec2(3.14159, 0.0)),\n            rand(v_texCoord + u_random_seed * vec2(0.0, 3.14159))\n        );\n\n        // Update only 'odd' checkerboard on odd iterations and vice-versa\n        if (u_iteration > 0.5) {\n            if (flip_probability.x > noise.x) {new.x = 1.0 - new.x;}\n            if (flip_probability.w > noise.y) {new.w = 1.0 - new.w;}\n        } else {\n            if (flip_probability.y > noise.x) {new.y = 1.0 - new.y;}\n            if (flip_probability.z > noise.y) {new.z = 1.0 - new.z;}\n        }\n\n        gl_FragColor = new;\n        return;\n    }\n\n    float average = (new.x + new.y + new.z + new.w) / 4.0;\n    if (u_pass < 1.5) {\n        gl_FragColor = vec4(average, average, average, 1.0);\n        return;\n    }\n\n    if (u_pass < 2.5) {\n        gl_FragColor = encode(average);\n        return;\n    }\n\n    vec4 k_average = vec4(0.0, 0.0, 0.0, 0.0);\n    for (int i = 0; i < 100; i++) {\n        float dx = rand(u_random_seed * vec2(float(i) * 3.14159, 0.0));\n        float dy = rand(u_random_seed * vec2(0.0, float(i) * 3.14159));\n        k_average += get_pixel(dx * u_resolution.x, dy * u_resolution.y);\n    }\n    k_average /= 200.0;\n    k_average += 0.5;\n\n    gl_FragColor = encode(decode(k_average));\n}\n");U=w.createProgram(),w.attachShader(U,e),w.attachShader(U,n),w.linkProgram(U),w.getProgramParameter(U,w.LINK_STATUS)&&w.useProgram(U),console.error(w.getProgramInfoLog(U)),w.deleteProgram(U)}(),function(){var e=w.getAttribLocation(U,"a_position"),n=w.createBuffer();w.bindBuffer(w.ARRAY_BUFFER,n),w.enableVertexAttribArray(e),w.vertexAttribPointer(e,2,w.FLOAT,!1,0,0),w.bufferData(w.ARRAY_BUFFER,new Float32Array([-1,-1,1,-1,-1,1,-1,1,1,-1,1,1]),w.STATIC_DRAW)}(),y=O(),A=O(),F=O(),N=O(),S=w.createFramebuffer(),function(){for(var e=0,n=Object.entries(C);e<n.length;e++){var t=Object(l.a)(n[e],2),a=t[0],r=t[1];M[a]=w.getUniformLocation(U,"u_"+a),w.uniform1f(M[a],r)}M.resolution=w.getUniformLocation(U,"u_resolution")}(),window.addEventListener("resize",B),B(),X()}}function B(){w.bindTexture(w.TEXTURE_2D,A),L(),w.bindTexture(w.TEXTURE_2D,y),L(),w.viewport(0,0,w.canvas.width,w.canvas.height)}var k=0;function X(){w.bindTexture(w.TEXTURE_2D,A),P("pass",0),w.bindFramebuffer(w.FRAMEBUFFER,S),w.framebufferTexture2D(w.FRAMEBUFFER,w.COLOR_ATTACHMENT0,w.TEXTURE_2D,y,0),w.drawArrays(w.TRIANGLES,0,6),P("pass",1),w.bindTexture(w.TEXTURE_2D,y),w.bindFramebuffer(w.FRAMEBUFFER,null),w.drawArrays(w.TRIANGLES,0,6);var e=A;if(A=y,y=e,k%5===0&&(P("pass",3),w.bindTexture(w.TEXTURE_2D,F),w.bindFramebuffer(w.FRAMEBUFFER,S),w.framebufferTexture2D(w.FRAMEBUFFER,w.COLOR_ATTACHMENT0,w.TEXTURE_2D,N,0),w.drawArrays(w.TRIANGLES,0,6),e=F,F=N,N=e),k%15===0){P("pass",2);var n=new Uint8Array(400);w.bindTexture(w.TEXTURE_2D,N),w.readPixels(0,0,10,10,w.RGBA,w.UNSIGNED_BYTE,n);for(var t=0,a=0;a<100;a++)t+=n[4*a]+(n[4*a+1]+(n[4*a+2]+n[4*a+3]/256)/256)/256;R({magnetization:100*((t/=100)/128-1)}),w.bindTexture(w.TEXTURE_2D,A),w.bindFramebuffer(w.FRAMEBUFFER,S),w.framebufferTexture2D(w.FRAMEBUFFER,w.COLOR_ATTACHMENT0,w.TEXTURE_2D,F,0),w.drawArrays(w.TRIANGLES,0,6)}P("iteration",1-C.iteration),P("random_seed",Math.random()),k+=1,requestAnimationFrame(X)}t(29);var I=function(){var e=Object(a.useState)({temperature:283.65,coupling:.5,field:0}),n=Object(l.a)(e,2),t=n[0],i=n[1],o=Object(a.useState)({magnetization:0}),u=Object(l.a)(o,2),s=u[0],m=u[1];Object(a.useEffect)((function(){return R=m,void setTimeout(j,1e3)}),[]);var d=Object(a.useState)(0),f=Object(l.a)(d,2),v=f[0],E=f[1],p=Object(a.useState)(0),g=Object(l.a)(p,2),h=g[0],T=g[1],w=function(){var e=window.devicePixelRatio;E(window.innerWidth*e),T(window.innerHeight*e)};Object(a.useEffect)((function(){window.addEventListener("resize",w),w()}));var A=function(e){return e.preventDefault()};return Object(a.useEffect)((function(){document.addEventListener("gesturestart",A,{passive:!1}),document.addEventListener("touchmove",A,{passive:!1})})),r.a.createElement(r.a.Fragment,null,r.a.createElement(c,{width:v,height:h}),r.a.createElement(b,{state:t,setState:function(e){console.log(e);for(var n=0,a=Object.entries(t);n<a.length;n++){var r=Object(l.a)(a[n],2);P(r[0],r[1])}i(e)}}),r.a.createElement(_,{state:t,responseFunctions:s,simWidth:2*v,simHeight:2*h}),r.a.createElement(x,null))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(r.a.createElement(r.a.StrictMode,null,r.a.createElement(I,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))}],[[14,1,2]]]);
//# sourceMappingURL=main.a2ac3376.chunk.js.map